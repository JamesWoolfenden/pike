
resource "google_project_iam_custom_role" "terraform_pike" {
  project     = "pike-412922"
  role_id     = "terraform_pike"
  title       = "terraform_pike"
  description = "A user with least privileges"
  permissions = [
    "accessapproval.settings.create",
    "accessapproval.settings.delete",
    "accessapproval.settings.get",
    "accessapproval.settings.update",
    "accesscontextmanager.accessLevels.create",
    "accesscontextmanager.accessLevels.delete",
    "accesscontextmanager.accessLevels.get",
    "accesscontextmanager.accessLevels.update",
    "accesscontextmanager.accessPolicies.create",
    "accesscontextmanager.accessPolicies.delete",
    "accesscontextmanager.accessPolicies.get",
    "accesscontextmanager.accessPolicies.getIamPolicy",
    "accesscontextmanager.accessPolicies.setIamPolicy",
    "accesscontextmanager.accessPolicies.update",
    "accesscontextmanager.authorizedOrgsDescs.create",
    "accesscontextmanager.authorizedOrgsDescs.delete",
    "accesscontextmanager.authorizedOrgsDescs.get",
    "accesscontextmanager.authorizedOrgsDescs.update",
    "accesscontextmanager.gcpUserAccessBindings.create",
    "accesscontextmanager.gcpUserAccessBindings.delete",
    "accesscontextmanager.gcpUserAccessBindings.get",
    "accesscontextmanager.gcpUserAccessBindings.update",
    "aiplatform.datasets.create",
    "aiplatform.datasets.delete",
    "aiplatform.datasets.get",
    "aiplatform.datasets.update",
    "aiplatform.endpoints.create",
    "aiplatform.endpoints.delete",
    "aiplatform.endpoints.get",
    "aiplatform.endpoints.getIamPolicy",
    "aiplatform.endpoints.setIamPolicy",
    "aiplatform.endpoints.update",
    "aiplatform.entityTypes.delete",
    "aiplatform.entityTypes.deleteFeatureValues",
    "aiplatform.entityTypes.get",
    "aiplatform.entityTypes.getIamPolicy",
    "aiplatform.entityTypes.readFeatureValues",
    "aiplatform.entityTypes.setIamPolicy",
    "aiplatform.entityTypes.update",
    "aiplatform.entityTypes.writeFeatureValues",
    "aiplatform.featureGroups.create",
    "aiplatform.featureGroups.delete",
    "aiplatform.featureGroups.get",
    "aiplatform.featureGroups.getIamPolicy",
    "aiplatform.featureGroups.list",
    "aiplatform.featureGroups.setIamPolicy",
    "aiplatform.featureGroups.update",
    "aiplatform.featureOnlineStores.create",
    "aiplatform.featureOnlineStores.delete",
    "aiplatform.featureOnlineStores.get",
    "aiplatform.featureOnlineStores.getIamPolicy",
    "aiplatform.featureOnlineStores.setIamPolicy",
    "aiplatform.featureOnlineStores.update",
    "aiplatform.featureViews.create",
    "aiplatform.featureViews.delete",
    "aiplatform.featureViews.get",
    "aiplatform.featureViews.getIamPolicy",
    "aiplatform.featureViews.list",
    "aiplatform.featureViews.setIamPolicy",
    "aiplatform.featureViews.update",
    "aiplatform.features.create",
    "aiplatform.features.delete",
    "aiplatform.features.get",
    "aiplatform.features.list",
    "aiplatform.features.update",
    "aiplatform.featurestores.create",
    "aiplatform.featurestores.delete",
    "aiplatform.featurestores.get",
    "aiplatform.featurestores.getIamPolicy",
    "aiplatform.featurestores.setIamPolicy",
    "aiplatform.featurestores.update",
    "aiplatform.indexEndpoints.create",
    "aiplatform.indexes.create",
    "aiplatform.metadataStores.create",
    "aiplatform.metadataStores.delete",
    "aiplatform.metadataStores.get",
    "aiplatform.notebookRuntimeTemplates.getIamPolicy",
    "aiplatform.notebookRuntimeTemplates.setIamPolicy",
    "aiplatform.tensorboards.create",
    "aiplatform.tensorboards.delete",
    "aiplatform.tensorboards.get",
    "aiplatform.tensorboards.update",
    "alloydb.backups.create",
    "alloydb.backups.delete",
    "alloydb.backups.get",
    "alloydb.backups.update",
    "alloydb.clusters.create",
    "alloydb.clusters.delete",
    "alloydb.clusters.get",
    "alloydb.clusters.update",
    "alloydb.instances.create",
    "alloydb.instances.delete",
    "alloydb.instances.get",
    "alloydb.instances.update",
    "alloydb.locations.list",
    "alloydb.operations.get",
    "alloydb.supportedDatabaseFlags.list",
    "alloydb.users.create",
    "alloydb.users.delete",
    "alloydb.users.get",
    "alloydb.users.update",
    "analyticshub.dataExchanges.create",
    "analyticshub.dataExchanges.delete",
    "analyticshub.dataExchanges.get",
    "analyticshub.dataExchanges.getIamPolicy",
    "analyticshub.dataExchanges.setIamPolicy",
    "analyticshub.dataExchanges.update",
    "analyticshub.listings.create",
    "analyticshub.listings.delete",
    "analyticshub.listings.get",
    "analyticshub.listings.getIamPolicy",
    "analyticshub.listings.setIamPolicy",
    "analyticshub.listings.subscribe",
    "analyticshub.listings.update",
    "analyticshub.subscriptions.create",
    "analyticshub.subscriptions.delete",
    "analyticshub.subscriptions.get",
    "analyticshub.subscriptions.update",
    "apigateway.apiconfigs.create",
    "apigateway.apiconfigs.delete",
    "apigateway.apiconfigs.get",
    "apigateway.apiconfigs.getIamPolicy",
    "apigateway.apiconfigs.setIamPolicy",
    "apigateway.apiconfigs.update",
    "apigateway.apis.create",
    "apigateway.apis.delete",
    "apigateway.apis.get",
    "apigateway.apis.getIamPolicy",
    "apigateway.apis.setIamPolicy",
    "apigateway.apis.update",
    "apigateway.gateways.create",
    "apigateway.gateways.delete",
    "apigateway.gateways.get",
    "apigateway.gateways.getIamPolicy",
    "apigateway.gateways.setIamPolicy",
    "apigateway.gateways.update",
    "apigateway.operations.get",
    "apigee.environments.getIamPolicy",
    "apigee.environments.setIamPolicy",
    "apphub.applications.get",
    "apphub.discoveredServices.list",
    "apphub.discoveredWorkloads.list",
    "artifactregistry.dockerimages.list",
    "artifactregistry.locations.list",
    "artifactregistry.repositories.create",
    "artifactregistry.repositories.delete",
    "artifactregistry.repositories.get",
    "artifactregistry.repositories.getIamPolicy",
    "artifactregistry.repositories.setIamPolicy",
    "artifactregistry.repositories.update",
    "backupdr.backupVaults.get",
    "backupdr.bvbackups.list",
    "backupdr.bvdataSources.get",
    "beyondcorp.appConnections.get",
    "beyondcorp.appConnectors.get",
    "beyondcorp.appGateways.get",
    "beyondcorp.securityGateways.get",
    "beyondcorp.securityGateways.getIamPolicy",
    "beyondcorp.securityGateways.setIamPolicy",
    "beyondcorp.sgApplications.getIamPolicy",
    "beyondcorp.sgApplications.setIamPolicy",
    "biglake.catalogs.create",
    "biglake.catalogs.delete",
    "biglake.catalogs.get",
    "biglake.databases.create",
    "biglake.databases.delete",
    "biglake.databases.get",
    "biglake.databases.update",
    "biglake.tables.create",
    "biglake.tables.delete",
    "biglake.tables.get",
    "biglake.tables.update",
    "bigquery.bireservations.get",
    "bigquery.bireservations.update",
    "bigquery.capacityCommitments.create",
    "bigquery.capacityCommitments.delete",
    "bigquery.capacityCommitments.get",
    "bigquery.capacityCommitments.list",
    "bigquery.capacityCommitments.update",
    "bigquery.connections.create",
    "bigquery.connections.delete",
    "bigquery.connections.get",
    "bigquery.connections.getIamPolicy",
    "bigquery.connections.setIamPolicy",
    "bigquery.connections.update",
    "bigquery.dataPolicies.getIamPolicy",
    "bigquery.datasets.create",
    "bigquery.datasets.delete",
    "bigquery.datasets.get",
    "bigquery.datasets.getIamPolicy",
    "bigquery.datasets.setIamPolicy",
    "bigquery.datasets.update",
    "bigquery.jobs.create",
    "bigquery.jobs.delete",
    "bigquery.jobs.get",
    "bigquery.jobs.update",
    "bigquery.reservationAssignments.create",
    "bigquery.reservationAssignments.delete",
    "bigquery.reservationAssignments.list",
    "bigquery.reservationAssignments.search",
    "bigquery.reservations.create",
    "bigquery.reservations.delete",
    "bigquery.reservations.get",
    "bigquery.reservations.list",
    "bigquery.reservations.update",
    "bigquery.routines.create",
    "bigquery.routines.delete",
    "bigquery.routines.get",
    "bigquery.routines.update",
    "bigquery.tables.create",
    "bigquery.tables.delete",
    "bigquery.tables.get",
    "bigquery.tables.getIamPolicy",
    "bigquery.tables.setIamPolicy",
    "bigquery.tables.update",
    "bigquery.transfers.get",
    "bigquery.transfers.update",
    "bigtable.appProfiles.create",
    "bigtable.appProfiles.delete",
    "bigtable.appProfiles.get",
    "bigtable.appProfiles.update",
    "bigtable.authorizedViews.create",
    "bigtable.authorizedViews.delete",
    "bigtable.authorizedViews.get",
    "bigtable.authorizedViews.update",
    "bigtable.clusters.list",
    "bigtable.instances.create",
    "bigtable.instances.delete",
    "bigtable.instances.get",
    "bigtable.instances.getIamPolicy",
    "bigtable.instances.list",
    "bigtable.instances.setIamPolicy",
    "bigtable.instances.update",
    "bigtable.logicalViews.create",
    "bigtable.logicalViews.delete",
    "bigtable.logicalViews.get",
    "bigtable.logicalViews.update",
    "bigtable.materializedViews.create",
    "bigtable.materializedViews.delete",
    "bigtable.materializedViews.get",
    "bigtable.materializedViews.update",
    "bigtable.tables.create",
    "bigtable.tables.delete",
    "bigtable.tables.get",
    "bigtable.tables.getIamPolicy",
    "bigtable.tables.mutateRows",
    "bigtable.tables.readRows",
    "bigtable.tables.setIamPolicy",
    "bigtable.tables.update",
    "billing.accounts.getIamPolicy",
    "billing.accounts.setIamPolicy",
    "binaryauthorization.attestors.getIamPolicy",
    "binaryauthorization.attestors.setIamPolicy",
    "certificatemanager.certmaps.get",
    "certificatemanager.certs.list",
    "clientauthconfig.clients.get",
    "cloudaicompanion.repositoryGroups.getIamPolicy",
    "cloudaicompanion.repositoryGroups.setIamPolicy",
    "cloudbuild.builds.create",
    "cloudbuild.builds.get",
    "cloudbuild.builds.update",
    "cloudbuild.connections.create",
    "cloudbuild.connections.delete",
    "cloudbuild.connections.get",
    "cloudbuild.connections.getIamPolicy",
    "cloudbuild.connections.setIamPolicy",
    "cloudbuild.connections.update",
    "cloudbuild.repositories.create",
    "cloudbuild.repositories.delete",
    "cloudbuild.repositories.fetchGitRefs",
    "cloudbuild.repositories.get",
    "clouddeploy.customTargetTypes.getIamPolicy",
    "clouddeploy.customTargetTypes.setIamPolicy",
    "clouddeploy.deliveryPipelines.getIamPolicy",
    "clouddeploy.deliveryPipelines.setIamPolicy",
    "clouddeploy.targets.getIamPolicy",
    "clouddeploy.targets.setIamPolicy",
    "cloudfunctions.functions.create",
    "cloudfunctions.functions.delete",
    "cloudfunctions.functions.get",
    "cloudfunctions.functions.getIamPolicy",
    "cloudfunctions.functions.setIamPolicy",
    "cloudfunctions.functions.update",
    "cloudfunctions.operations.get",
    "cloudkms.cryptoKeyVersions.create",
    "cloudkms.cryptoKeyVersions.destroy",
    "cloudkms.cryptoKeyVersions.get",
    "cloudkms.cryptoKeyVersions.list",
    "cloudkms.cryptoKeyVersions.useToDecrypt",
    "cloudkms.cryptoKeyVersions.useToEncrypt",
    "cloudkms.cryptoKeys.create",
    "cloudkms.cryptoKeys.get",
    "cloudkms.cryptoKeys.getIamPolicy",
    "cloudkms.cryptoKeys.setIamPolicy",
    "cloudkms.cryptoKeys.update",
    "cloudkms.ekmConnections.getIamPolicy",
    "cloudkms.importJobs.create",
    "cloudkms.importJobs.get",
    "cloudkms.keyHandles.create",
    "cloudkms.keyHandles.get",
    "cloudkms.keyHandles.list",
    "cloudkms.keyRings.create",
    "cloudkms.keyRings.get",
    "cloudkms.keyRings.getIamPolicy",
    "cloudkms.keyRings.list",
    "cloudkms.keyRings.setIamPolicy",
    "cloudscheduler.jobs.create",
    "cloudscheduler.jobs.delete",
    "cloudscheduler.jobs.enable",
    "cloudscheduler.jobs.get",
    "cloudscheduler.jobs.update",
    "cloudsql.backupRuns.list",
    "cloudsql.databases.create",
    "cloudsql.databases.delete",
    "cloudsql.databases.get",
    "cloudsql.databases.list",
    "cloudsql.databases.update",
    "cloudsql.instances.create",
    "cloudsql.instances.delete",
    "cloudsql.instances.get",
    "cloudsql.instances.list",
    "cloudsql.instances.update",
    "cloudsql.users.create",
    "cloudsql.users.delete",
    "cloudsql.users.list",
    "cloudsql.users.update",
    "cloudtasks.queues.getIamPolicy",
    "cloudtasks.queues.list",
    "cloudtasks.queues.setIamPolicy",
    "composer.environments.create",
    "composer.environments.delete",
    "composer.environments.get",
    "composer.environments.update",
    "composer.imageversions.list",
    "composer.operations.get",
    "composer.userworkloadsconfigmaps.get",
    "composer.userworkloadssecrets.get",
    "compute.addresses.create",
    "compute.addresses.delete",
    "compute.addresses.get",
    "compute.addresses.list",
    "compute.backendBuckets.create",
    "compute.backendBuckets.delete",
    "compute.backendBuckets.get",
    "compute.backendBuckets.getIamPolicy",
    "compute.backendBuckets.setIamPolicy",
    "compute.backendBuckets.update",
    "compute.backendBuckets.use",
    "compute.backendServices.create",
    "compute.backendServices.delete",
    "compute.backendServices.get",
    "compute.backendServices.getIamPolicy",
    "compute.backendServices.setIamPolicy",
    "compute.backendServices.update",
    "compute.backendServices.use",
    "compute.disks.create",
    "compute.disks.get",
    "compute.disks.getIamPolicy",
    "compute.disks.setIamPolicy",
    "compute.firewalls.create",
    "compute.firewalls.delete",
    "compute.firewalls.get",
    "compute.firewalls.update",
    "compute.forwardingRules.create",
    "compute.forwardingRules.delete",
    "compute.forwardingRules.get",
    "compute.forwardingRules.list",
    "compute.forwardingRules.update",
    "compute.globalAddresses.create",
    "compute.globalAddresses.createInternal",
    "compute.globalAddresses.delete",
    "compute.globalAddresses.deleteInternal",
    "compute.globalAddresses.get",
    "compute.globalForwardingRules.create",
    "compute.globalForwardingRules.delete",
    "compute.globalForwardingRules.get",
    "compute.globalForwardingRules.update",
    "compute.globalNetworkEndpointGroups.create",
    "compute.globalNetworkEndpointGroups.delete",
    "compute.globalNetworkEndpointGroups.get",
    "compute.globalOperations.get",
    "compute.healthChecks.create",
    "compute.healthChecks.delete",
    "compute.healthChecks.get",
    "compute.healthChecks.update",
    "compute.healthChecks.useReadOnly",
    "compute.httpHealthChecks.create",
    "compute.httpHealthChecks.delete",
    "compute.httpHealthChecks.get",
    "compute.httpHealthChecks.update",
    "compute.httpHealthChecks.useReadOnly",
    "compute.httpsHealthChecks.create",
    "compute.httpsHealthChecks.delete",
    "compute.httpsHealthChecks.get",
    "compute.httpsHealthChecks.update",
    "compute.httpsHealthChecks.useReadOnly",
    "compute.images.getIamPolicy",
    "compute.images.list",
    "compute.images.setIamPolicy",
    "compute.instanceGroupManagers.get",
    "compute.instanceGroups.get",
    "compute.instanceTemplates.create",
    "compute.instanceTemplates.delete",
    "compute.instanceTemplates.get",
    "compute.instanceTemplates.getIamPolicy",
    "compute.instanceTemplates.setIamPolicy",
    "compute.instances.create",
    "compute.instances.delete",
    "compute.instances.get",
    "compute.instances.getIamPolicy",
    "compute.instances.getSerialPortOutput",
    "compute.instances.setIamPolicy",
    "compute.instances.setMetadata",
    "compute.instances.setTags",
    "compute.instantSnapshots.getIamPolicy",
    "compute.instantSnapshots.setIamPolicy",
    "compute.machineImages.getIamPolicy",
    "compute.machineImages.setIamPolicy",
    "compute.machineTypes.list",
    "compute.networkEndpointGroups.create",
    "compute.networkEndpointGroups.delete",
    "compute.networkEndpointGroups.get",
    "compute.networks.create",
    "compute.networks.delete",
    "compute.networks.get",
    "compute.networks.list",
    "compute.networks.removePeering",
    "compute.networks.updatePolicy",
    "compute.networks.use",
    "compute.nodeTypes.list",
    "compute.projects.get",
    "compute.projects.setCommonInstanceMetadata",
    "compute.projects.setUsageExportBucket",
    "compute.regionBackendServices.create",
    "compute.regionBackendServices.delete",
    "compute.regionBackendServices.get",
    "compute.regionBackendServices.getIamPolicy",
    "compute.regionBackendServices.setIamPolicy",
    "compute.regionBackendServices.update",
    "compute.regionBackendServices.use",
    "compute.regionHealthChecks.create",
    "compute.regionHealthChecks.delete",
    "compute.regionHealthChecks.get",
    "compute.regionHealthChecks.update",
    "compute.regionHealthChecks.useReadOnly",
    "compute.regionNetworkEndpointGroups.create",
    "compute.regionNetworkEndpointGroups.delete",
    "compute.regionNetworkEndpointGroups.get",
    "compute.regionOperations.get",
    "compute.regionTargetHttpProxies.create",
    "compute.regionTargetHttpProxies.delete",
    "compute.regionTargetHttpProxies.get",
    "compute.regionTargetHttpProxies.update",
    "compute.regionTargetHttpsProxies.create",
    "compute.regionTargetHttpsProxies.delete",
    "compute.regionTargetHttpsProxies.get",
    "compute.regionTargetHttpsProxies.update",
    "compute.regionTargetTcpProxies.create",
    "compute.regionTargetTcpProxies.delete",
    "compute.regionTargetTcpProxies.get",
    "compute.regionUrlMaps.create",
    "compute.regionUrlMaps.delete",
    "compute.regionUrlMaps.get",
    "compute.regionUrlMaps.update",
    "compute.regions.list",
    "compute.reservations.get",
    "compute.resourcePolicies.get",
    "compute.routers.get",
    "compute.securityPolicies.create",
    "compute.securityPolicies.delete",
    "compute.securityPolicies.get",
    "compute.securityPolicies.update",
    "compute.snapshots.get",
    "compute.snapshots.getIamPolicy",
    "compute.snapshots.setIamPolicy",
    "compute.sslCertificates.get",
    "compute.sslPolicies.get",
    "compute.storagePoolTypes.get",
    "compute.storagePools.getIamPolicy",
    "compute.storagePools.setIamPolicy",
    "compute.subnetworks.create",
    "compute.subnetworks.delete",
    "compute.subnetworks.get",
    "compute.subnetworks.getIamPolicy",
    "compute.subnetworks.list",
    "compute.subnetworks.setIamPolicy",
    "compute.subnetworks.use",
    "compute.subnetworks.useExternalIp",
    "compute.targetHttpProxies.create",
    "compute.targetHttpProxies.delete",
    "compute.targetHttpProxies.get",
    "compute.targetHttpProxies.update",
    "compute.targetHttpsProxies.create",
    "compute.targetHttpsProxies.delete",
    "compute.targetHttpsProxies.get",
    "compute.targetHttpsProxies.update",
    "compute.targetVpnGateways.get",
    "compute.urlMaps.create",
    "compute.urlMaps.delete",
    "compute.urlMaps.get",
    "compute.urlMaps.update",
    "compute.vpnGateways.get",
    "compute.zones.get",
    "compute.zones.list",
    "container.clusters.create",
    "container.clusters.delete",
    "container.clusters.get",
    "container.clusters.update",
    "container.operations.get",
    "containeranalysis.notes.getIamPolicy",
    "containeranalysis.notes.setIamPolicy",
    "datacatalog.categories.getIamPolicy",
    "datacatalog.categories.setIamPolicy",
    "datacatalog.entries.create",
    "datacatalog.entries.delete",
    "datacatalog.entries.get",
    "datacatalog.entries.update",
    "datacatalog.entries.updateTag",
    "datacatalog.entryGroups.create",
    "datacatalog.entryGroups.delete",
    "datacatalog.entryGroups.get",
    "datacatalog.entryGroups.getIamPolicy",
    "datacatalog.entryGroups.setIamPolicy",
    "datacatalog.entryGroups.update",
    "datacatalog.tagTemplates.create",
    "datacatalog.tagTemplates.delete",
    "datacatalog.tagTemplates.get",
    "datacatalog.tagTemplates.getIamPolicy",
    "datacatalog.tagTemplates.getTag",
    "datacatalog.tagTemplates.setIamPolicy",
    "datacatalog.tagTemplates.use",
    "datacatalog.taxonomies.create",
    "datacatalog.taxonomies.delete",
    "datacatalog.taxonomies.get",
    "datacatalog.taxonomies.getIamPolicy",
    "datacatalog.taxonomies.setIamPolicy",
    "datacatalog.taxonomies.update",
    "dataform.repositories.getIamPolicy",
    "dataform.repositories.setIamPolicy",
    "datafusion.instances.getIamPolicy",
    "datafusion.instances.setIamPolicy",
    "dataplex.aspectTypes.getIamPolicy",
    "dataplex.aspectTypes.setIamPolicy",
    "dataplex.assets.create",
    "dataplex.assets.delete",
    "dataplex.assets.get",
    "dataplex.assets.getIamPolicy",
    "dataplex.assets.setIamPolicy",
    "dataplex.assets.update",
    "dataplex.datascans.create",
    "dataplex.datascans.delete",
    "dataplex.datascans.get",
    "dataplex.datascans.getIamPolicy",
    "dataplex.datascans.setIamPolicy",
    "dataplex.datascans.update",
    "dataplex.entryGroups.getIamPolicy",
    "dataplex.entryGroups.setIamPolicy",
    "dataplex.entryTypes.getIamPolicy",
    "dataplex.glossaries.create",
    "dataplex.glossaries.delete",
    "dataplex.glossaries.get",
    "dataplex.glossaries.getIamPolicy",
    "dataplex.glossaries.setIamPolicy",
    "dataplex.glossaries.update",
    "dataplex.glossaryCategories.create",
    "dataplex.glossaryCategories.delete",
    "dataplex.glossaryCategories.get",
    "dataplex.glossaryCategories.update",
    "dataplex.glossaryTerms.create",
    "dataplex.glossaryTerms.delete",
    "dataplex.glossaryTerms.get",
    "dataplex.glossaryTerms.update",
    "dataplex.lakes.getIamPolicy",
    "dataplex.lakes.setIamPolicy",
    "dataplex.operations.get",
    "dataplex.tasks.getIamPolicy",
    "dataplex.tasks.setIamPolicy",
    "dataplex.zones.getIamPolicy",
    "dataplex.zones.setIamPolicy",
    "dataproc.autoscalingPolicies.getIamPolicy",
    "dataproc.autoscalingPolicies.setIamPolicy",
    "dataproc.clusters.getIamPolicy",
    "dataproc.clusters.setIamPolicy",
    "dataproc.jobs.getIamPolicy",
    "dataproc.jobs.setIamPolicy",
    "datastream.locations.fetchStaticIps",
    "dns.changes.create",
    "dns.changes.get",
    "dns.changes.list",
    "dns.dnsKeys.get",
    "dns.dnsKeys.list",
    "dns.gkeClusters.bindPrivateDNSZone",
    "dns.managedZones.create",
    "dns.managedZones.delete",
    "dns.managedZones.get",
    "dns.managedZones.getIamPolicy",
    "dns.managedZones.setIamPolicy",
    "dns.managedZones.update",
    "dns.networks.bindDNSResponsePolicy",
    "dns.networks.bindPrivateDNSPolicy",
    "dns.networks.bindPrivateDNSZone",
    "dns.networks.targetWithPeeringZone",
    "dns.networks.useHealthSignals",
    "dns.policies.create",
    "dns.policies.delete",
    "dns.policies.get",
    "dns.policies.getIamPolicy",
    "dns.policies.list",
    "dns.policies.update",
    "dns.resourceRecordSets.create",
    "dns.resourceRecordSets.delete",
    "dns.resourceRecordSets.get",
    "dns.resourceRecordSets.list",
    "dns.resourceRecordSets.update",
    "file.instances.get",
    "firebase.clients.create",
    "firebase.clients.delete",
    "firebase.clients.get",
    "firebase.clients.update",
    "firebase.projects.create",
    "firebase.projects.delete",
    "firebase.projects.get",
    "firebase.projects.update",
    "firebasedatabase.instances.create",
    "firebasedatabase.instances.delete",
    "firebasedatabase.instances.disable",
    "firebasedatabase.instances.get",
    "firebasedatabase.instances.update",
    "firebasehosting.sites.create",
    "firebasehosting.sites.delete",
    "firebasehosting.sites.get",
    "firebasehosting.sites.update",
    "firebaserules.releases.create",
    "firebaserules.releases.delete",
    "firebaserules.releases.get",
    "firebaserules.releases.update",
    "firebaserules.rulesets.create",
    "firebaserules.rulesets.delete",
    "firebaserules.rulesets.get",
    "firebasestorage.buckets.addFirebase",
    "firebasestorage.buckets.get",
    "firebasestorage.buckets.removeFirebase",
    "gkebackup.backupPlans.getIamPolicy",
    "gkebackup.backupPlans.setIamPolicy",
    "gkebackup.restorePlans.getIamPolicy",
    "gkebackup.restorePlans.setIamPolicy",
    "gkehub.features.get",
    "gkehub.features.getIamPolicy",
    "gkehub.features.setIamPolicy",
    "gkehub.memberships.get",
    "gkehub.memberships.getIamPolicy",
    "gkehub.memberships.setIamPolicy",
    "gkehub.scopes.getIamPolicy",
    "gkehub.scopes.setIamPolicy",
    "gkemulticloud.attachedClusters.generateInstallManifest",
    "gkemulticloud.attachedServerConfigs.get",
    "gkemulticloud.awsServerConfigs.get",
    "gkemulticloud.azureServerConfigs.get",
    "healthcare.consentStores.getIamPolicy",
    "healthcare.consentStores.setIamPolicy",
    "healthcare.datasets.getIamPolicy",
    "healthcare.datasets.setIamPolicy",
    "healthcare.dicomStores.getIamPolicy",
    "healthcare.dicomStores.setIamPolicy",
    "healthcare.fhirStores.getIamPolicy",
    "healthcare.fhirStores.setIamPolicy",
    "healthcare.hl7V2Stores.getIamPolicy",
    "healthcare.hl7V2Stores.setIamPolicy",
    "iam.googleapis.com/workforcePools.getIamPolicy",
    "iam.googleapis.com/workforcePools.setIamPolicy",
    "iam.googleapis.com/workloadIdentityPools.getIamPolicy",
    "iam.googleapis.com/workloadIdentityPools.setIamPolicy",
    "iam.roles.create",
    "iam.roles.delete",
    "iam.roles.get",
    "iam.roles.list",
    "iam.roles.update",
    "iam.serviceAccountKeys.create",
    "iam.serviceAccountKeys.get",
    "iam.serviceAccounts.actAs",
    "iam.serviceAccounts.create",
    "iam.serviceAccounts.delete",
    "iam.serviceAccounts.get",
    "iam.serviceAccounts.getAccessToken",
    "iam.serviceAccounts.getIamPolicy",
    "iam.serviceAccounts.list",
    "iam.serviceAccounts.setIamPolicy",
    "iam.serviceAccounts.signJwt",
    "iam.serviceAccounts.update",
    "iam.workloadIdentityPoolProviders.create",
    "iam.workloadIdentityPoolProviders.delete",
    "iam.workloadIdentityPoolProviders.get",
    "iam.workloadIdentityPoolProviders.update",
    "iam.workloadIdentityPools.create",
    "iam.workloadIdentityPools.delete",
    "iam.workloadIdentityPools.get",
    "iam.workloadIdentityPools.update",
    "iap.tunnel.getIamPolicy",
    "iap.tunnel.setIamPolicy",
    "iap.tunnelDestGroups.getIamPolicy",
    "iap.tunnelDestGroups.setIamPolicy",
    "iap.tunnelInstances.getIamPolicy",
    "iap.tunnelInstances.setIamPolicy",
    "iap.web.getIamPolicy",
    "iap.web.setIamPolicy",
    "iap.webServiceVersions.getIamPolicy",
    "iap.webServices.getIamPolicy",
    "iap.webServices.setIamPolicy",
    "iap.webTypes.getIamPolicy",
    "iap.webTypes.setIamPolicy",
    "logging.settings.get",
    "logging.views.getIamPolicy",
    "logging.views.setIamPolicy",
    "lustre.instances.get",
    "memcache.instances.get",
    "memorystore.instances.get",
    "metastore.databases.getIamPolicy",
    "metastore.databases.setIamPolicy",
    "metastore.federations.getIamPolicy",
    "metastore.federations.setIamPolicy",
    "metastore.services.get",
    "metastore.services.getIamPolicy",
    "metastore.services.setIamPolicy",
    "metastore.tables.getIamPolicy",
    "metastore.tables.setIamPolicy",
    "monitoring.notificationChannels.get",
    "monitoring.services.list",
    "networksecurity.addressGroups.getIamPolicy",
    "networksecurity.addressGroups.setIamPolicy",
    "notebooks.instances.getIamPolicy",
    "notebooks.instances.setIamPolicy",
    "notebooks.runtimes.getIamPolicy",
    "oracledatabase.autonomousDatabases.get",
    "oracledatabase.autonomousDatabases.list",
    "oracledatabase.cloudExadataInfrastructures.get",
    "oracledatabase.cloudExadataInfrastructures.list",
    "oracledatabase.cloudVmClusters.get",
    "oracledatabase.cloudVmClusters.list",
    "oracledatabase.dbNodes.list",
    "oracledatabase.dbServers.list",
    "orgpolicy.policy.get",
    "orgpolicy.policy.set",
    "parametermanager.parameterVersions.get",
    "parametermanager.parameterVersions.render",
    "parametermanager.parameters.get",
    "parametermanager.parameters.list",
    "privateca.caPools.create",
    "privateca.caPools.delete",
    "privateca.caPools.get",
    "privateca.caPools.getIamPolicy",
    "privateca.caPools.setIamPolicy",
    "privateca.caPools.update",
    "privateca.certificateAuthorities.get",
    "privateca.certificateTemplates.create",
    "privateca.certificateTemplates.delete",
    "privateca.certificateTemplates.get",
    "privateca.certificateTemplates.getIamPolicy",
    "privateca.certificateTemplates.setIamPolicy",
    "privateca.operations.delete",
    "privateca.operations.get",
    "privilegedaccessmanager.entitlements.create",
    "privilegedaccessmanager.entitlements.delete",
    "privilegedaccessmanager.entitlements.get",
    "privilegedaccessmanager.entitlements.list",
    "privilegedaccessmanager.entitlements.setIamPolicy",
    "privilegedaccessmanager.entitlements.update",
    "pubsub.schemas.attach",
    "pubsub.schemas.create",
    "pubsub.schemas.delete",
    "pubsub.schemas.get",
    "pubsub.schemas.getIamPolicy",
    "pubsub.schemas.list",
    "pubsub.schemas.listRevisions",
    "pubsub.schemas.setIamPolicy",
    "pubsub.subscriptions.create",
    "pubsub.subscriptions.delete",
    "pubsub.subscriptions.get",
    "pubsub.subscriptions.getIamPolicy",
    "pubsub.subscriptions.list",
    "pubsub.subscriptions.setIamPolicy",
    "pubsub.subscriptions.update",
    "pubsub.topics.attachSubscription",
    "pubsub.topics.create",
    "pubsub.topics.delete",
    "pubsub.topics.detachSubscription",
    "pubsub.topics.get",
    "pubsub.topics.getIamPolicy",
    "pubsub.topics.setIamPolicy",
    "pubsub.topics.update",
    "pubsublite.reservations.create",
    "pubsublite.reservations.delete",
    "pubsublite.reservations.get",
    "pubsublite.reservations.update",
    "pubsublite.subscriptions.create",
    "pubsublite.subscriptions.delete",
    "pubsublite.subscriptions.get",
    "pubsublite.subscriptions.update",
    "pubsublite.topics.create",
    "pubsublite.topics.delete",
    "pubsublite.topics.get",
    "pubsublite.topics.subscribe",
    "pubsublite.topics.update",
    "redis.clusters.connect",
    "redis.clusters.create",
    "redis.clusters.delete",
    "redis.clusters.get",
    "redis.clusters.update",
    "redis.instances.create",
    "redis.instances.delete",
    "redis.instances.get",
    "redis.instances.update",
    "redis.operations.get",
    "resourcemanager.folders.get",
    "resourcemanager.folders.getIamPolicy",
    "resourcemanager.folders.list",
    "resourcemanager.folders.setIamPolicy",
    "resourcemanager.organizations.get",
    "resourcemanager.organizations.getIamPolicy",
    "resourcemanager.organizations.setIamPolicy",
    "resourcemanager.projects.create",
    "resourcemanager.projects.delete",
    "resourcemanager.projects.get",
    "resourcemanager.projects.getIamPolicy",
    "resourcemanager.projects.setIamPolicy",
    "resourcemanager.projects.update",
    "resourcemanager.tagKeys.create",
    "resourcemanager.tagKeys.delete",
    "resourcemanager.tagKeys.get",
    "resourcemanager.tagKeys.getIamPolicy",
    "resourcemanager.tagKeys.list",
    "resourcemanager.tagKeys.setIamPolicy",
    "resourcemanager.tagKeys.update",
    "resourcemanager.tagValueBindings.create",
    "resourcemanager.tagValueBindings.delete",
    "resourcemanager.tagValues.create",
    "resourcemanager.tagValues.delete",
    "resourcemanager.tagValues.get",
    "resourcemanager.tagValues.getIamPolicy",
    "resourcemanager.tagValues.list",
    "resourcemanager.tagValues.setIamPolicy",
    "resourcemanager.tagValues.update",
    "run.domainmappings.create",
    "run.domainmappings.delete",
    "run.domainmappings.get",
    "run.domainmappings.update",
    "run.jobs.create",
    "run.jobs.delete",
    "run.jobs.get",
    "run.jobs.getIamPolicy",
    "run.jobs.setIamPolicy",
    "run.jobs.update",
    "run.locations.list",
    "run.operations.get",
    "run.services.create",
    "run.services.delete",
    "run.services.get",
    "run.services.getIamPolicy",
    "run.services.setIamPolicy",
    "run.services.update",
    "run.workerpools.get",
    "run.workerpools.getIamPolicy",
    "run.workerpools.setIamPolicy",
    "runtimeconfig.configs.create",
    "runtimeconfig.configs.delete",
    "runtimeconfig.configs.get",
    "runtimeconfig.configs.getIamPolicy",
    "runtimeconfig.configs.setIamPolicy",
    "runtimeconfig.configs.update",
    "runtimeconfig.variables.create",
    "runtimeconfig.variables.delete",
    "runtimeconfig.variables.get",
    "runtimeconfig.variables.update",
    "secretmanager.secrets.create",
    "secretmanager.secrets.delete",
    "secretmanager.secrets.get",
    "secretmanager.secrets.getIamPolicy",
    "secretmanager.secrets.list",
    "secretmanager.secrets.setIamPolicy",
    "secretmanager.secrets.update",
    "secretmanager.versions.access",
    "secretmanager.versions.add",
    "secretmanager.versions.destroy",
    "secretmanager.versions.disable",
    "secretmanager.versions.enable",
    "secretmanager.versions.get",
    "securesourcemanager.instances.getIamPolicy",
    "securesourcemanager.instances.setIamPolicy",
    "securesourcemanager.repositories.getIamPolicy",
    "securesourcemanager.repositories.setIamPolicy",
    "securitycenter.sources.getIamPolicy",
    "securitycenter.sources.setIamPolicy",
    "servicedirectory.endpoints.create",
    "servicedirectory.endpoints.delete",
    "servicedirectory.endpoints.get",
    "servicedirectory.endpoints.update",
    "servicedirectory.namespaces.getIamPolicy",
    "servicedirectory.namespaces.setIamPolicy",
    "servicedirectory.services.create",
    "servicedirectory.services.delete",
    "servicedirectory.services.get",
    "servicedirectory.services.getIamPolicy",
    "servicedirectory.services.setIamPolicy",
    "servicedirectory.services.update",
    "servicemanagement.services.getIamPolicy",
    "servicemanagement.services.setIamPolicy",
    "servicenetworking.services.addPeering",
    "servicenetworking.services.deleteConnection",
    "servicenetworking.services.get",
    "serviceusage.operations.get",
    "serviceusage.services.disable",
    "serviceusage.services.enable",
    "serviceusage.services.get",
    "serviceusage.services.list",
    "source.repos.create",
    "source.repos.delete",
    "source.repos.get",
    "source.repos.getIamPolicy",
    "source.repos.setIamPolicy",
    "source.repos.updateRepoConfig",
    "spanner.backupSchedules.create",
    "spanner.backupSchedules.delete",
    "spanner.backupSchedules.get",
    "spanner.backupSchedules.update",
    "spanner.databaseOperations.get",
    "spanner.databases.create",
    "spanner.databases.createBackup",
    "spanner.databases.drop",
    "spanner.databases.get",
    "spanner.databases.getIamPolicy",
    "spanner.databases.setIamPolicy",
    "spanner.databases.update",
    "spanner.databases.updateDdl",
    "spanner.instanceConfigOperations.get",
    "spanner.instanceConfigs.create",
    "spanner.instanceConfigs.delete",
    "spanner.instanceConfigs.get",
    "spanner.instanceConfigs.update",
    "spanner.instanceOperations.get",
    "spanner.instancePartitionOperations.get",
    "spanner.instancePartitions.create",
    "spanner.instancePartitions.delete",
    "spanner.instancePartitions.get",
    "spanner.instancePartitions.update",
    "spanner.instances.create",
    "spanner.instances.delete",
    "spanner.instances.get",
    "spanner.instances.getIamPolicy",
    "spanner.instances.update",
    "storage.buckets.create",
    "storage.buckets.delete",
    "storage.buckets.get",
    "storage.buckets.getIamPolicy",
    "storage.buckets.list",
    "storage.buckets.setIamPolicy",
    "storage.buckets.update",
    "storage.hmacKeys.create",
    "storage.hmacKeys.delete",
    "storage.hmacKeys.get",
    "storage.hmacKeys.update",
    "storage.intelligenceConfigs.get",
    "storage.intelligenceConfigs.update",
    "storage.managedFolders.getIamPolicy",
    "storage.managedFolders.setIamPolicy",
    "storage.objects.create",
    "storage.objects.delete",
    "storage.objects.get",
    "storage.objects.getIamPolicy",
    "storage.objects.list",
    "storage.objects.setIamPolicy",
    "storage.objects.update",
    "storageinsights.reportConfigs.create",
    "storagetransfer.projects.getServiceAccount",
    "tpu.acceleratortypes.list",
    "tpu.runtimeversions.list",
    "tpu.tensorflowversions.list",
    "vmwareengine.externalAddresses.get",
    "vmwareengine.networkPolicies.get",
    "vmwareengine.privateClouds.get",
    "vmwareengine.privateClouds.showNsxCredentials",
    "vmwareengine.privateClouds.showVcenterCredentials",
    "vmwareengine.subnets.get",
    "vmwareengine.vmwareEngineNetworks.get",
    "vpcaccess.connectors.get",
    "workstations.workstationConfigs.getIamPolicy",
    "workstations.workstationConfigs.setIamPolicy",
    "workstations.workstations.getIamPolicy",
    "workstations.workstations.setIamPolicy"
  ]
}
