{
  "additionalProperties": false,
  "createOnlyProperties": [
    "/properties/AwsAccountId",
    "/properties/DataSetId"
  ],
  "definitions": {
    "CalculatedColumn": {
      "additionalProperties": false,
      "description": "<p>A calculated column for a dataset.</p>",
      "properties": {
        "ColumnId": {
          "description": "<p>A unique ID to identify a calculated column. During a dataset update, if the column ID\n            of a calculated column matches that of an existing calculated column, Amazon QuickSight\n            preserves the existing calculated column.</p>",
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "ColumnName": {
          "description": "<p>Column name.</p>",
          "maxLength": 127,
          "minLength": 1,
          "type": "string"
        },
        "Expression": {
          "description": "<p>An expression that defines the calculated column.</p>",
          "maxLength": 4096,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "ColumnId",
        "ColumnName",
        "Expression"
      ],
      "type": "object"
    },
    "CastColumnTypeOperation": {
      "additionalProperties": false,
      "description": "<p>A transform operation that casts a column to a different type.</p>",
      "properties": {
        "ColumnName": {
          "description": "<p>Column name.</p>",
          "maxLength": 127,
          "minLength": 1,
          "type": "string"
        },
        "Format": {
          "description": "<p>When casting a column from string to datetime type, you can supply a string in a\n            format supported by Amazon QuickSight to denote the source data format.</p>",
          "maxLength": 32,
          "minLength": 0,
          "type": "string"
        },
        "NewColumnType": {
          "$ref": "#/definitions/ColumnDataType"
        },
        "SubType": {
          "$ref": "#/definitions/ColumnDataSubType"
        }
      },
      "required": [
        "ColumnName",
        "NewColumnType"
      ],
      "type": "object"
    },
    "ColumnDataSubType": {
      "enum": [
        "FLOAT",
        "FIXED"
      ],
      "type": "string"
    },
    "ColumnDataType": {
      "enum": [
        "STRING",
        "INTEGER",
        "DECIMAL",
        "DATETIME"
      ],
      "type": "string"
    },
    "ColumnDescription": {
      "additionalProperties": false,
      "description": "<p>Metadata that contains a description for a column.</p>",
      "properties": {
        "Text": {
          "description": "<p>The text of a description for a column.</p>",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ColumnGroup": {
      "additionalProperties": false,
      "description": "<p>Groupings of columns that work together in certain Amazon QuickSight features. This is\n            a variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.</p>",
      "properties": {
        "GeoSpatialColumnGroup": {
          "$ref": "#/definitions/GeoSpatialColumnGroup"
        }
      },
      "type": "object"
    },
    "ColumnLevelPermissionRule": {
      "additionalProperties": false,
      "description": "<p>A rule defined to grant access on one or more restricted columns.\n            Each dataset can have multiple rules.\n            To create a restricted column, you add it to one or more rules.\n            Each rule must contain at least one column and at least one user or group.\n            To be able to see a restricted column, a user or group needs to be added\n            to a rule for that column.</p>",
      "properties": {
        "ColumnNames": {
          "description": "<p>An array of column names.</p>",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "Principals": {
          "description": "<p>An array of Amazon Resource Names (ARNs) for Amazon QuickSight users or groups.</p>",
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "minItems": 1,
          "type": "array"
        }
      },
      "type": "object"
    },
    "ColumnTag": {
      "additionalProperties": false,
      "description": "<p>A tag for a column in a\n            <code>\n               <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_TagColumnOperation.html\">TagColumnOperation</a>\n            </code>\n            structure. This is a\n            variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.</p>",
      "properties": {
        "ColumnDescription": {
          "$ref": "#/definitions/ColumnDescription"
        },
        "ColumnGeographicRole": {
          "$ref": "#/definitions/GeoSpatialDataRole"
        }
      },
      "type": "object"
    },
    "ColumnTagName": {
      "enum": [
        "COLUMN_GEOGRAPHIC_ROLE",
        "COLUMN_DESCRIPTION"
      ],
      "type": "string"
    },
    "CreateColumnsOperation": {
      "additionalProperties": false,
      "description": "<p>A transform operation that creates calculated columns. Columns created in one such\n            operation form a lexical closure.</p>",
      "properties": {
        "Columns": {
          "description": "<p>Calculated columns to create.</p>",
          "items": {
            "$ref": "#/definitions/CalculatedColumn"
          },
          "maxItems": 128,
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "Columns"
      ],
      "type": "object"
    },
    "CustomSql": {
      "additionalProperties": false,
      "description": "<p>A physical table type built from the results of the custom SQL query.</p>",
      "properties": {
        "Columns": {
          "description": "<p>The column schema from the SQL query result set.</p>",
          "items": {
            "$ref": "#/definitions/InputColumn"
          },
          "maxItems": 2048,
          "minItems": 1,
          "type": "array"
        },
        "DataSourceArn": {
          "description": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "type": "string"
        },
        "Name": {
          "description": "<p>A display name for the SQL query result.</p>",
          "maxLength": 128,
          "minLength": 1,
          "type": "string"
        },
        "SqlQuery": {
          "description": "<p>The SQL query.</p>",
          "maxLength": 168000,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "Columns",
        "DataSourceArn",
        "Name",
        "SqlQuery"
      ],
      "type": "object"
    },
    "DataSetImportMode": {
      "enum": [
        "SPICE",
        "DIRECT_QUERY"
      ],
      "type": "string"
    },
    "DataSetRefreshProperties": {
      "additionalProperties": false,
      "description": "<p>The refresh properties of a dataset.</p>",
      "properties": {
        "RefreshConfiguration": {
          "$ref": "#/definitions/RefreshConfiguration"
        }
      },
      "required": [
        "RefreshConfiguration"
      ],
      "type": "object"
    },
    "DataSetUsageConfiguration": {
      "additionalProperties": false,
      "description": "<p>The usage configuration to apply to child datasets that reference this dataset as a source.</p>",
      "properties": {
        "DisableUseAsDirectQuerySource": {
          "default": false,
          "description": "<p>An option that controls whether a child dataset of a direct query can use this dataset as a source.</p>",
          "type": "boolean"
        },
        "DisableUseAsImportedSource": {
          "default": false,
          "description": "<p>An option that controls whether a child dataset that's stored in QuickSight can use this dataset as a source.</p>",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DatasetParameter": {
      "additionalProperties": false,
      "description": "<p>A dataset parameter.</p>",
      "properties": {
        "DateTimeDatasetParameter": {
          "$ref": "#/definitions/DateTimeDatasetParameter"
        },
        "DecimalDatasetParameter": {
          "$ref": "#/definitions/DecimalDatasetParameter"
        },
        "IntegerDatasetParameter": {
          "$ref": "#/definitions/IntegerDatasetParameter"
        },
        "StringDatasetParameter": {
          "$ref": "#/definitions/StringDatasetParameter"
        }
      },
      "type": "object"
    },
    "DatasetParameterValueType": {
      "enum": [
        "MULTI_VALUED",
        "SINGLE_VALUED"
      ],
      "type": "string"
    },
    "DateTimeDatasetParameter": {
      "additionalProperties": false,
      "description": "<p>A date time parameter for a dataset.</p>",
      "properties": {
        "DefaultValues": {
          "$ref": "#/definitions/DateTimeDatasetParameterDefaultValues"
        },
        "Id": {
          "description": "<p>An identifier for the parameter that is created in the dataset.</p>",
          "maxLength": 128,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9-]+$",
          "type": "string"
        },
        "Name": {
          "description": "<p>The name of the date time parameter that is created in the dataset.</p>",
          "maxLength": 2048,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9]+$",
          "type": "string"
        },
        "TimeGranularity": {
          "$ref": "#/definitions/TimeGranularity"
        },
        "ValueType": {
          "$ref": "#/definitions/DatasetParameterValueType"
        }
      },
      "required": [
        "Id",
        "Name",
        "ValueType"
      ],
      "type": "object"
    },
    "DateTimeDatasetParameterDefaultValues": {
      "additionalProperties": false,
      "description": "<p>The default values of a date time parameter.</p>",
      "properties": {
        "StaticValues": {
          "description": "<p>A list of static default values for a given date time parameter.</p>",
          "items": {
            "description": "<p>The default value for the date time parameter.</p>",
            "type": "string"
          },
          "maxItems": 32,
          "minItems": 0,
          "type": "array"
        }
      },
      "type": "object"
    },
    "DecimalDatasetParameter": {
      "additionalProperties": false,
      "description": "<p>A decimal parameter for a dataset.</p>",
      "properties": {
        "DefaultValues": {
          "$ref": "#/definitions/DecimalDatasetParameterDefaultValues"
        },
        "Id": {
          "description": "<p>An identifier for the decimal parameter created in the dataset.</p>",
          "maxLength": 128,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9-]+$",
          "type": "string"
        },
        "Name": {
          "description": "<p>The name of the decimal parameter that is created in the dataset.</p>",
          "maxLength": 2048,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9]+$",
          "type": "string"
        },
        "ValueType": {
          "$ref": "#/definitions/DatasetParameterValueType"
        }
      },
      "required": [
        "Id",
        "Name",
        "ValueType"
      ],
      "type": "object"
    },
    "DecimalDatasetParameterDefaultValues": {
      "additionalProperties": false,
      "description": "<p>The default values of a decimal parameter.</p>",
      "properties": {
        "StaticValues": {
          "description": "<p>A list of static default values for a given decimal parameter.</p>",
          "items": {
            "default": 0,
            "description": "<p>The default value for the decimal parameter.</p>",
            "type": "number"
          },
          "maxItems": 32,
          "minItems": 0,
          "type": "array"
        }
      },
      "type": "object"
    },
    "FieldFolder": {
      "additionalProperties": false,
      "description": "<p>A FieldFolder element is a folder that contains fields and nested subfolders.</p>",
      "properties": {
        "Columns": {
          "description": "<p>A folder has a list of columns. A column can only be in one folder.</p>",
          "items": {
            "type": "string"
          },
          "maxItems": 5000,
          "minItems": 0,
          "type": "array"
        },
        "Description": {
          "description": "<p>The description for a field folder.</p>",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        }
      },
      "type": "object"
    },
    "FieldFolderMap": {
      "additionalProperties": false,
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/FieldFolder"
        }
      },
      "type": "object"
    },
    "FileFormat": {
      "enum": [
        "CSV",
        "TSV",
        "CLF",
        "ELF",
        "XLSX",
        "JSON"
      ],
      "type": "string"
    },
    "FilterOperation": {
      "additionalProperties": false,
      "description": "<p>A transform operation that filters rows based on a condition.</p>",
      "properties": {
        "ConditionExpression": {
          "description": "<p>An expression that must evaluate to a Boolean value. Rows for which the expression\n            evaluates to true are kept in the dataset.</p>",
          "maxLength": 4096,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "ConditionExpression"
      ],
      "type": "object"
    },
    "GeoSpatialColumnGroup": {
      "additionalProperties": false,
      "description": "<p>Geospatial column group that denotes a hierarchy.</p>",
      "properties": {
        "Columns": {
          "description": "<p>Columns in this hierarchy.</p>",
          "items": {
            "maxLength": 127,
            "minLength": 1,
            "type": "string"
          },
          "maxItems": 16,
          "minItems": 1,
          "type": "array"
        },
        "CountryCode": {
          "$ref": "#/definitions/GeoSpatialCountryCode"
        },
        "Name": {
          "description": "<p>A display name for the hierarchy.</p>",
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "Columns",
        "Name"
      ],
      "type": "object"
    },
    "GeoSpatialCountryCode": {
      "enum": [
        "US"
      ],
      "type": "string"
    },
    "GeoSpatialDataRole": {
      "enum": [
        "COUNTRY",
        "STATE",
        "COUNTY",
        "CITY",
        "POSTCODE",
        "LONGITUDE",
        "LATITUDE",
        "POLITICAL1",
        "CENSUS_TRACT",
        "CENSUS_BLOCK_GROUP",
        "CENSUS_BLOCK"
      ],
      "type": "string"
    },
    "IncrementalRefresh": {
      "additionalProperties": false,
      "description": "<p>The incremental refresh configuration for a dataset.</p>",
      "properties": {
        "LookbackWindow": {
          "$ref": "#/definitions/LookbackWindow"
        }
      },
      "required": [
        "LookbackWindow"
      ],
      "type": "object"
    },
    "IngestionWaitPolicy": {
      "additionalProperties": false,
      "description": "<p>Wait policy to use when creating/updating dataset. Default is to wait for SPICE ingestion to finish with timeout of 36 hours.</p>",
      "properties": {
        "IngestionWaitTimeInHours": {
          "default": 36,
          "description": "<p>The maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.\n Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>",
          "maximum": 36,
          "minimum": 1,
          "type": "number"
        },
        "WaitForSpiceIngestion": {
          "default": true,
          "description": "<p>Wait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).\n  Applicable only when DataSetImportMode mode is set to SPICE.</p>",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InputColumn": {
      "additionalProperties": false,
      "description": "<p>Metadata for a column that is used as the input of a transform operation.</p>",
      "properties": {
        "Name": {
          "description": "<p>The name of this column in the underlying data source.</p>",
          "maxLength": 127,
          "minLength": 1,
          "type": "string"
        },
        "SubType": {
          "$ref": "#/definitions/ColumnDataSubType"
        },
        "Type": {
          "$ref": "#/definitions/InputColumnDataType"
        }
      },
      "required": [
        "Name",
        "Type"
      ],
      "type": "object"
    },
    "InputColumnDataType": {
      "enum": [
        "STRING",
        "INTEGER",
        "DECIMAL",
        "DATETIME",
        "BIT",
        "BOOLEAN",
        "JSON"
      ],
      "type": "string"
    },
    "IntegerDatasetParameter": {
      "additionalProperties": false,
      "description": "<p>An integer parameter for a dataset.</p>",
      "properties": {
        "DefaultValues": {
          "$ref": "#/definitions/IntegerDatasetParameterDefaultValues"
        },
        "Id": {
          "description": "<p>An identifier for the integer parameter created in the dataset.</p>",
          "maxLength": 128,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9-]+$",
          "type": "string"
        },
        "Name": {
          "description": "<p>The name of the integer parameter that is created in the dataset.</p>",
          "maxLength": 2048,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9]+$",
          "type": "string"
        },
        "ValueType": {
          "$ref": "#/definitions/DatasetParameterValueType"
        }
      },
      "required": [
        "Id",
        "Name",
        "ValueType"
      ],
      "type": "object"
    },
    "IntegerDatasetParameterDefaultValues": {
      "additionalProperties": false,
      "description": "<p>The default values of an integer parameter.</p>",
      "properties": {
        "StaticValues": {
          "description": "<p>A list of static default values for a given integer parameter.</p>",
          "items": {
            "default": 0,
            "description": "<p>The default value for the integer parameter.</p>",
            "type": "number"
          },
          "maxItems": 32,
          "minItems": 0,
          "type": "array"
        }
      },
      "type": "object"
    },
    "JoinInstruction": {
      "additionalProperties": false,
      "description": "<p>The instructions associated with a join. </p>",
      "properties": {
        "LeftJoinKeyProperties": {
          "$ref": "#/definitions/JoinKeyProperties"
        },
        "LeftOperand": {
          "description": "<p>The operand on the left side of a join.</p>",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[0-9a-zA-Z-]*$",
          "type": "string"
        },
        "OnClause": {
          "description": "<p>The join instructions provided in the <code>ON</code> clause of a join.</p>",
          "maxLength": 512,
          "minLength": 1,
          "type": "string"
        },
        "RightJoinKeyProperties": {
          "$ref": "#/definitions/JoinKeyProperties"
        },
        "RightOperand": {
          "description": "<p>The operand on the right side of a join.</p>",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[0-9a-zA-Z-]*$",
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/JoinType"
        }
      },
      "required": [
        "LeftOperand",
        "OnClause",
        "RightOperand",
        "Type"
      ],
      "type": "object"
    },
    "JoinKeyProperties": {
      "additionalProperties": false,
      "description": "<p>Properties associated with the columns participating in a join.</p>",
      "properties": {
        "UniqueKey": {
          "description": "<p>A value that indicates that a row in a table is uniquely identified by the columns in\n            a join key. This is used by Amazon QuickSight to optimize query performance.</p>",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "JoinType": {
      "enum": [
        "INNER",
        "OUTER",
        "LEFT",
        "RIGHT"
      ],
      "type": "string"
    },
    "LogicalTable": {
      "additionalProperties": false,
      "description": "<p>A <i>logical table</i> is a unit that joins and that data\n            transformations operate on. A logical table has a source, which can be either a physical\n            table or result of a join. When a logical table points to a physical table, the logical\n            table acts as a mutable copy of that physical table through transform operations.</p>",
      "properties": {
        "Alias": {
          "description": "<p>A display name for the logical table.</p>",
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "DataTransforms": {
          "description": "<p>Transform operations that act on this logical table. For this structure to be valid, only one of the attributes can be non-null. </p>",
          "items": {
            "$ref": "#/definitions/TransformOperation"
          },
          "maxItems": 2048,
          "minItems": 1,
          "type": "array"
        },
        "Source": {
          "$ref": "#/definitions/LogicalTableSource"
        }
      },
      "required": [
        "Alias",
        "Source"
      ],
      "type": "object"
    },
    "LogicalTableMap": {
      "additionalProperties": false,
      "maxProperties": 64,
      "minProperties": 1,
      "patternProperties": {
        "^[0-9a-zA-Z-]*$": {
          "$ref": "#/definitions/LogicalTable"
        }
      },
      "type": "object"
    },
    "LogicalTableSource": {
      "additionalProperties": false,
      "description": "<p>Information about the source of a logical table. This is a variant type structure. For\n            this structure to be valid, only one of the attributes can be non-null.</p>",
      "properties": {
        "DataSetArn": {
          "description": "<p>The Amazon Resource Number (ARN) of the parent dataset.</p>",
          "type": "string"
        },
        "JoinInstruction": {
          "$ref": "#/definitions/JoinInstruction"
        },
        "PhysicalTableId": {
          "description": "<p>Physical table ID.</p>",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[0-9a-zA-Z-]*$",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LookbackWindow": {
      "additionalProperties": false,
      "description": "<p>The lookback window setup of an incremental refresh configuration.</p>",
      "properties": {
        "ColumnName": {
          "description": "<p>The name of the lookback window column.</p>",
          "type": "string"
        },
        "Size": {
          "default": 0,
          "description": "<p>The lookback window column size.</p>",
          "minimum": 1,
          "type": "number"
        },
        "SizeUnit": {
          "$ref": "#/definitions/LookbackWindowSizeUnit"
        }
      },
      "required": [
        "ColumnName",
        "Size",
        "SizeUnit"
      ],
      "type": "object"
    },
    "LookbackWindowSizeUnit": {
      "enum": [
        "HOUR",
        "DAY",
        "WEEK"
      ],
      "type": "string"
    },
    "NewDefaultValues": {
      "additionalProperties": false,
      "description": "<p>The configuration that overrides the existing default values for a dataset parameter that is inherited from another dataset.</p>",
      "properties": {
        "DateTimeStaticValues": {
          "description": "<p>A list of static default values for a given date time parameter.</p>",
          "items": {
            "description": "<p>The default value for the date time parameter.</p>",
            "type": "string"
          },
          "maxItems": 32,
          "minItems": 0,
          "type": "array"
        },
        "DecimalStaticValues": {
          "description": "<p>A list of static default values for a given decimal parameter.</p>",
          "items": {
            "default": 0,
            "description": "<p>The default value for the decimal parameter.</p>",
            "type": "number"
          },
          "maxItems": 32,
          "minItems": 0,
          "type": "array"
        },
        "IntegerStaticValues": {
          "description": "<p>A list of static default values for a given integer parameter.</p>",
          "items": {
            "default": 0,
            "description": "<p>The default value for the integer parameter.</p>",
            "type": "number"
          },
          "maxItems": 32,
          "minItems": 0,
          "type": "array"
        },
        "StringStaticValues": {
          "description": "<p>A list of static default values for a given string parameter.</p>",
          "items": {
            "description": "<p>The default value for the string parameter.</p>",
            "maxLength": 512,
            "minLength": 0,
            "type": "string"
          },
          "maxItems": 32,
          "minItems": 0,
          "type": "array"
        }
      },
      "type": "object"
    },
    "OutputColumn": {
      "additionalProperties": false,
      "description": "<p>Output column.</p>",
      "properties": {
        "Description": {
          "description": "<p>A description for a column.</p>",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "<p>The display name of the column..</p>",
          "maxLength": 127,
          "minLength": 1,
          "type": "string"
        },
        "SubType": {
          "$ref": "#/definitions/ColumnDataSubType"
        },
        "Type": {
          "$ref": "#/definitions/ColumnDataType"
        }
      },
      "type": "object"
    },
    "OverrideDatasetParameterOperation": {
      "additionalProperties": false,
      "description": "<p>A transform operation that overrides the dataset parameter values that are defined in another dataset.</p>",
      "properties": {
        "NewDefaultValues": {
          "$ref": "#/definitions/NewDefaultValues"
        },
        "NewParameterName": {
          "description": "<p>The new name for the parameter.</p>",
          "maxLength": 2048,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9]+$",
          "type": "string"
        },
        "ParameterName": {
          "description": "<p>The name of the parameter to be overridden with different values.</p>",
          "maxLength": 2048,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9]+$",
          "type": "string"
        }
      },
      "required": [
        "ParameterName"
      ],
      "type": "object"
    },
    "PhysicalTable": {
      "additionalProperties": false,
      "description": "<p>A view of a data source that contains information about the shape of the data in the\n            underlying source. This is a variant type structure. For this structure to be valid,\n            only one of the attributes can be non-null.</p>",
      "properties": {
        "CustomSql": {
          "$ref": "#/definitions/CustomSql"
        },
        "RelationalTable": {
          "$ref": "#/definitions/RelationalTable"
        },
        "S3Source": {
          "$ref": "#/definitions/S3Source"
        }
      },
      "type": "object"
    },
    "PhysicalTableMap": {
      "additionalProperties": false,
      "maxProperties": 32,
      "minProperties": 0,
      "patternProperties": {
        "^[0-9a-zA-Z-]*$": {
          "$ref": "#/definitions/PhysicalTable"
        }
      },
      "type": "object"
    },
    "ProjectOperation": {
      "additionalProperties": false,
      "description": "<p>A transform operation that projects columns. Operations that come after a projection\n            can only refer to projected columns.</p>",
      "properties": {
        "ProjectedColumns": {
          "description": "<p>Projected columns.</p>",
          "items": {
            "type": "string"
          },
          "maxItems": 2000,
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "ProjectedColumns"
      ],
      "type": "object"
    },
    "RefreshConfiguration": {
      "additionalProperties": false,
      "description": "<p>The refresh configuration of a dataset.</p>",
      "properties": {
        "IncrementalRefresh": {
          "$ref": "#/definitions/IncrementalRefresh"
        }
      },
      "required": [
        "IncrementalRefresh"
      ],
      "type": "object"
    },
    "RelationalTable": {
      "additionalProperties": false,
      "description": "<p>A physical table type for relational data sources.</p>",
      "properties": {
        "Catalog": {
          "description": "<p>The catalog associated with a table.</p>",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "DataSourceArn": {
          "description": "<p>The Amazon Resource Name (ARN) for the data source.</p>",
          "type": "string"
        },
        "InputColumns": {
          "description": "<p>The column schema of the table.</p>",
          "items": {
            "$ref": "#/definitions/InputColumn"
          },
          "maxItems": 2048,
          "minItems": 1,
          "type": "array"
        },
        "Name": {
          "description": "<p>The name of the relational table.</p>",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "Schema": {
          "description": "<p>The schema name. This name applies to certain relational database engines.</p>",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "DataSourceArn",
        "InputColumns",
        "Name"
      ],
      "type": "object"
    },
    "RenameColumnOperation": {
      "additionalProperties": false,
      "description": "<p>A transform operation that renames a column.</p>",
      "properties": {
        "ColumnName": {
          "description": "<p>The name of the column to be renamed.</p>",
          "maxLength": 127,
          "minLength": 1,
          "type": "string"
        },
        "NewColumnName": {
          "description": "<p>The new name for the column.</p>",
          "maxLength": 127,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "ColumnName",
        "NewColumnName"
      ],
      "type": "object"
    },
    "ResourcePermission": {
      "additionalProperties": false,
      "description": "<p>Permission for the resource.</p>",
      "properties": {
        "Actions": {
          "description": "<p>The IAM action to grant or revoke permissions on.</p>",
          "items": {
            "type": "string"
          },
          "maxItems": 20,
          "minItems": 1,
          "type": "array"
        },
        "Principal": {
          "description": "<p>The Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>\n            </li>\n            <li>\n               <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>\n            </li>\n            <li>\n               <p>The ARN of an Amazon Web Services account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across Amazon Web Services accounts.\n                    (This is less common.) </p>\n            </li>\n         </ul>",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "Actions",
        "Principal"
      ],
      "type": "object"
    },
    "RowLevelPermissionDataSet": {
      "additionalProperties": false,
      "description": "<p>Information about a dataset that contains permissions for row-level security (RLS).\n            The permissions dataset maps fields to users or groups. For more information, see\n            <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html\">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User\n                Guide</i>.</p>\n         <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is\n            not supported for new RLS datasets.</p>",
      "properties": {
        "Arn": {
          "description": "<p>The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.</p>",
          "type": "string"
        },
        "FormatVersion": {
          "$ref": "#/definitions/RowLevelPermissionFormatVersion"
        },
        "Namespace": {
          "description": "<p>The namespace associated with the dataset that contains permissions for RLS.</p>",
          "maxLength": 64,
          "minLength": 0,
          "pattern": "^[a-zA-Z0-9._-]*$",
          "type": "string"
        },
        "PermissionPolicy": {
          "$ref": "#/definitions/RowLevelPermissionPolicy"
        },
        "Status": {
          "$ref": "#/definitions/Status"
        }
      },
      "required": [
        "Arn",
        "PermissionPolicy"
      ],
      "type": "object"
    },
    "RowLevelPermissionFormatVersion": {
      "enum": [
        "VERSION_1",
        "VERSION_2"
      ],
      "type": "string"
    },
    "RowLevelPermissionPolicy": {
      "enum": [
        "GRANT_ACCESS",
        "DENY_ACCESS"
      ],
      "type": "string"
    },
    "RowLevelPermissionTagConfiguration": {
      "additionalProperties": false,
      "description": "<p>The configuration of tags on a dataset to set row-level security. </p>",
      "properties": {
        "Status": {
          "$ref": "#/definitions/Status"
        },
        "TagRuleConfigurations": {
          "description": "<p>A list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.</p>",
          "items": {
            "items": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          },
          "maxItems": 50,
          "minItems": 1,
          "type": "array"
        },
        "TagRules": {
          "description": "<p>A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.</p>",
          "items": {
            "$ref": "#/definitions/RowLevelPermissionTagRule"
          },
          "maxItems": 50,
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "TagRules"
      ],
      "type": "object"
    },
    "RowLevelPermissionTagRule": {
      "additionalProperties": false,
      "description": "<p>A set of rules associated with a tag.</p>",
      "properties": {
        "ColumnName": {
          "description": "<p>The column name that a tag key is assigned to.</p>",
          "type": "string"
        },
        "MatchAllValue": {
          "description": "<p>A string that you want to use to filter by all the values in a column in the dataset and don\u2019t want to list the values one by one. For example, you can use an asterisk as your match all value.</p>",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "TagKey": {
          "description": "<p>The unique key for a tag.</p>",
          "maxLength": 128,
          "minLength": 1,
          "type": "string"
        },
        "TagMultiValueDelimiter": {
          "description": "<p>A string that you want to use to delimit the values when you pass the values at run time. For example, you can delimit the values with a comma.</p>",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "ColumnName",
        "TagKey"
      ],
      "type": "object"
    },
    "S3Source": {
      "additionalProperties": false,
      "description": "<p>A physical table type for an S3 data source.</p>",
      "properties": {
        "DataSourceArn": {
          "description": "<p>The Amazon Resource Name (ARN) for the data source.</p>",
          "type": "string"
        },
        "InputColumns": {
          "description": "<p>A physical table type for an S3 data source.</p>\n         <note>\n            <p>For files that aren't JSON, only <code>STRING</code> data types are supported in input columns.</p>\n         </note>",
          "items": {
            "$ref": "#/definitions/InputColumn"
          },
          "maxItems": 2048,
          "minItems": 1,
          "type": "array"
        },
        "UploadSettings": {
          "$ref": "#/definitions/UploadSettings"
        }
      },
      "required": [
        "DataSourceArn",
        "InputColumns"
      ],
      "type": "object"
    },
    "Status": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "StringDatasetParameter": {
      "additionalProperties": false,
      "description": "<p>A string parameter for a dataset.</p>",
      "properties": {
        "DefaultValues": {
          "$ref": "#/definitions/StringDatasetParameterDefaultValues"
        },
        "Id": {
          "description": "<p>An identifier for the string parameter that is created in the dataset.</p>",
          "maxLength": 128,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9-]+$",
          "type": "string"
        },
        "Name": {
          "description": "<p>The name of the string parameter that is created in the dataset.</p>",
          "maxLength": 2048,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9]+$",
          "type": "string"
        },
        "ValueType": {
          "$ref": "#/definitions/DatasetParameterValueType"
        }
      },
      "required": [
        "Id",
        "Name",
        "ValueType"
      ],
      "type": "object"
    },
    "StringDatasetParameterDefaultValues": {
      "additionalProperties": false,
      "description": "<p>The default values of a string parameter.</p>",
      "properties": {
        "StaticValues": {
          "description": "<p>A list of static default values for a given string parameter.</p>",
          "items": {
            "description": "<p>The default value for the string parameter.</p>",
            "maxLength": 512,
            "minLength": 0,
            "type": "string"
          },
          "maxItems": 32,
          "minItems": 0,
          "type": "array"
        }
      },
      "type": "object"
    },
    "Tag": {
      "additionalProperties": false,
      "description": "<p>The key or keys of the key-value pairs for the resource tag or tags assigned to the\n            resource.</p>",
      "properties": {
        "Key": {
          "description": "<p>Tag key.</p>",
          "maxLength": 128,
          "minLength": 1,
          "type": "string"
        },
        "Value": {
          "description": "<p>Tag value.</p>",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "object"
    },
    "TagColumnOperation": {
      "additionalProperties": false,
      "description": "<p>A transform operation that tags a column with additional information.</p>",
      "properties": {
        "ColumnName": {
          "description": "<p>The column that this operation acts on.</p>",
          "maxLength": 127,
          "minLength": 1,
          "type": "string"
        },
        "Tags": {
          "description": "<p>The dataset column tag, currently only used for geospatial type tagging.</p>\n         <note>\n            <p>This is not tags for the Amazon Web Services tagging feature.</p>\n         </note>",
          "items": {
            "$ref": "#/definitions/ColumnTag"
          },
          "maxItems": 16,
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "ColumnName",
        "Tags"
      ],
      "type": "object"
    },
    "TextQualifier": {
      "enum": [
        "DOUBLE_QUOTE",
        "SINGLE_QUOTE"
      ],
      "type": "string"
    },
    "TimeGranularity": {
      "enum": [
        "YEAR",
        "QUARTER",
        "MONTH",
        "WEEK",
        "DAY",
        "HOUR",
        "MINUTE",
        "SECOND",
        "MILLISECOND"
      ],
      "type": "string"
    },
    "TransformOperation": {
      "additionalProperties": false,
      "description": "<p>A data transformation on a logical table. This is a variant type structure. For this\n            structure to be valid, only one of the attributes can be non-null.</p>",
      "properties": {
        "CastColumnTypeOperation": {
          "$ref": "#/definitions/CastColumnTypeOperation"
        },
        "CreateColumnsOperation": {
          "$ref": "#/definitions/CreateColumnsOperation"
        },
        "FilterOperation": {
          "$ref": "#/definitions/FilterOperation"
        },
        "OverrideDatasetParameterOperation": {
          "$ref": "#/definitions/OverrideDatasetParameterOperation"
        },
        "ProjectOperation": {
          "$ref": "#/definitions/ProjectOperation"
        },
        "RenameColumnOperation": {
          "$ref": "#/definitions/RenameColumnOperation"
        },
        "TagColumnOperation": {
          "$ref": "#/definitions/TagColumnOperation"
        },
        "UntagColumnOperation": {
          "$ref": "#/definitions/UntagColumnOperation"
        }
      },
      "type": "object"
    },
    "UntagColumnOperation": {
      "additionalProperties": false,
      "description": "<p>A transform operation that removes tags associated with a column.</p>",
      "properties": {
        "ColumnName": {
          "description": "<p>The column that this operation acts on.</p>",
          "maxLength": 127,
          "minLength": 1,
          "type": "string"
        },
        "TagNames": {
          "description": "<p>The column tags to remove from this column.</p>",
          "items": {
            "$ref": "#/definitions/ColumnTagName"
          },
          "type": "array"
        }
      },
      "required": [
        "ColumnName",
        "TagNames"
      ],
      "type": "object"
    },
    "UploadSettings": {
      "additionalProperties": false,
      "description": "<p>Information about the format for a source file or files.</p>",
      "properties": {
        "ContainsHeader": {
          "description": "<p>Whether the file has a header row, or the files each have a header row.</p>",
          "type": "boolean"
        },
        "Delimiter": {
          "description": "<p>The delimiter between values in the file.</p>",
          "maxLength": 1,
          "minLength": 1,
          "type": "string"
        },
        "Format": {
          "$ref": "#/definitions/FileFormat"
        },
        "StartFromRow": {
          "description": "<p>A row number to start reading data from.</p>",
          "minimum": 1,
          "type": "number"
        },
        "TextQualifier": {
          "$ref": "#/definitions/TextQualifier"
        }
      },
      "type": "object"
    }
  },
  "description": "Definition of the AWS::QuickSight::DataSet Resource Type.",
  "handlers": {
    "create": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DescribeDataSetPermissions",
        "quicksight:DescribeIngestion",
        "quicksight:ListIngestions",
        "quicksight:CreateDataSet",
        "quicksight:PassDataSource",
        "quicksight:PassDataSet",
        "quicksight:TagResource",
        "quicksight:ListTagsForResource",
        "quicksight:DescribeDataSetRefreshProperties",
        "quicksight:PutDataSetRefreshProperties"
      ]
    },
    "delete": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DeleteDataSet",
        "quicksight:ListTagsForResource",
        "quicksight:DescribeIngestion",
        "quicksight:DeleteDataSetRefreshProperties",
        "quicksight:DescribeDataSetRefreshProperties"
      ]
    },
    "list": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:ListDataSets"
      ]
    },
    "read": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DescribeDataSetPermissions",
        "quicksight:ListTagsForResource",
        "quicksight:DescribeDataSetRefreshProperties"
      ]
    },
    "update": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DescribeDataSetPermissions",
        "quicksight:PassDataSource",
        "quicksight:UpdateDataSet",
        "quicksight:UpdateDataSetPermissions",
        "quicksight:PassDataSet",
        "quicksight:DescribeIngestion",
        "quicksight:ListIngestions",
        "quicksight:CancelIngestion",
        "quicksight:TagResource",
        "quicksight:UntagResource",
        "quicksight:ListTagsForResource",
        "quicksight:PutDataSetRefreshProperties",
        "quicksight:DescribeDataSetRefreshProperties",
        "quicksight:DeleteDataSetRefreshProperties"
      ]
    }
  },
  "primaryIdentifier": [
    "/properties/AwsAccountId",
    "/properties/DataSetId"
  ],
  "properties": {
    "Arn": {
      "description": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
      "type": "string"
    },
    "AwsAccountId": {
      "maxLength": 12,
      "minLength": 12,
      "pattern": "^[0-9]{12}$",
      "type": "string"
    },
    "ColumnGroups": {
      "description": "<p>Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.</p>",
      "items": {
        "$ref": "#/definitions/ColumnGroup"
      },
      "maxItems": 8,
      "minItems": 1,
      "type": "array"
    },
    "ColumnLevelPermissionRules": {
      "description": "<p>A set of one or more definitions of a <code>\n               <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html\">ColumnLevelPermissionRule</a>\n            </code>.</p>",
      "items": {
        "$ref": "#/definitions/ColumnLevelPermissionRule"
      },
      "minItems": 1,
      "type": "array"
    },
    "ConsumedSpiceCapacityInBytes": {
      "default": 0,
      "description": "<p>The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't\n            imported into SPICE.</p>",
      "type": "number"
    },
    "CreatedTime": {
      "description": "<p>The time that this dataset was created.</p>",
      "format": "string",
      "type": "string"
    },
    "DataSetId": {
      "type": "string"
    },
    "DataSetRefreshProperties": {
      "$ref": "#/definitions/DataSetRefreshProperties"
    },
    "DataSetUsageConfiguration": {
      "$ref": "#/definitions/DataSetUsageConfiguration"
    },
    "DatasetParameters": {
      "description": "<p>The parameter declarations of the dataset.</p>",
      "items": {
        "$ref": "#/definitions/DatasetParameter"
      },
      "maxItems": 32,
      "minItems": 0,
      "type": "array"
    },
    "FieldFolders": {
      "$ref": "#/definitions/FieldFolderMap"
    },
    "ImportMode": {
      "$ref": "#/definitions/DataSetImportMode"
    },
    "IngestionWaitPolicy": {
      "$ref": "#/definitions/IngestionWaitPolicy"
    },
    "LastUpdatedTime": {
      "description": "<p>The last time that this dataset was updated.</p>",
      "format": "string",
      "type": "string"
    },
    "LogicalTableMap": {
      "$ref": "#/definitions/LogicalTableMap"
    },
    "Name": {
      "description": "<p>The display name for the dataset.</p>",
      "maxLength": 128,
      "minLength": 1,
      "type": "string"
    },
    "OutputColumns": {
      "description": "<p>The list of columns after all transforms. These columns are available in templates,\n            analyses, and dashboards.</p>",
      "items": {
        "$ref": "#/definitions/OutputColumn"
      },
      "type": "array"
    },
    "Permissions": {
      "description": "<p>A list of resource permissions on the dataset.</p>",
      "items": {
        "$ref": "#/definitions/ResourcePermission"
      },
      "maxItems": 64,
      "minItems": 1,
      "type": "array"
    },
    "PhysicalTableMap": {
      "$ref": "#/definitions/PhysicalTableMap"
    },
    "RowLevelPermissionDataSet": {
      "$ref": "#/definitions/RowLevelPermissionDataSet"
    },
    "RowLevelPermissionTagConfiguration": {
      "$ref": "#/definitions/RowLevelPermissionTagConfiguration"
    },
    "Tags": {
      "description": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 200,
      "minItems": 1,
      "type": "array"
    }
  },
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/ConsumedSpiceCapacityInBytes",
    "/properties/CreatedTime",
    "/properties/LastUpdatedTime",
    "/properties/OutputColumns"
  ],
  "tagging": {
    "cloudFormationSystemTags": true,
    "tagOnCreate": true,
    "tagProperty": "/properties/Tags",
    "tagUpdatable": true,
    "taggable": true
  },
  "typeName": "AWS::QuickSight::DataSet",
  "writeOnlyProperties": [
    "/properties/FieldFolders",
    "/properties/IngestionWaitPolicy"
  ]
}
