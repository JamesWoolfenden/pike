{
  "additionalProperties": false,
  "createOnlyProperties": [
    "/properties/DataLakeArn"
  ],
  "definitions": {
    "AccessTypes": {
      "description": "The Amazon S3 or AWS Lake Formation access type.",
      "insertionOrder": true,
      "items": {
        "enum": [
          "LAKEFORMATION",
          "S3"
        ],
        "type": "string"
      },
      "minItems": 1,
      "type": "array",
      "uniqueItems": true
    },
    "AwsLogSource": {
      "additionalProperties": false,
      "description": "Amazon Security Lake supports log and event collection for natively supported AWS services.",
      "properties": {
        "SourceName": {
          "description": "The name for a AWS source. This must be a Regionally unique value.",
          "type": "string"
        },
        "SourceVersion": {
          "description": "The version for a AWS source. This must be a Regionally unique value.",
          "pattern": "^(latest|[0-9]\\.[0-9])$",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomLogSource": {
      "additionalProperties": false,
      "properties": {
        "SourceName": {
          "description": "The name for a third-party custom source. This must be a Regionally unique value.",
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[\\\\\\w\\-_:/.]*$",
          "type": "string"
        },
        "SourceVersion": {
          "description": "The version for a third-party custom source. This must be a Regionally unique value.",
          "maxLength": 32,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9\\-\\.\\_]*$",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Source": {
      "additionalProperties": false,
      "oneOf": [
        {
          "required": [
            "AwsLogSource"
          ]
        },
        {
          "required": [
            "CustomLogSource"
          ]
        }
      ],
      "properties": {
        "AwsLogSource": {
          "$ref": "#/definitions/AwsLogSource"
        },
        "CustomLogSource": {
          "$ref": "#/definitions/CustomLogSource"
        }
      }
    },
    "Tag": {
      "additionalProperties": false,
      "properties": {
        "Key": {
          "description": "The name of the tag. This is a general label that acts as a category for a more specific tag value (value).",
          "maxLength": 128,
          "minLength": 1,
          "type": "string"
        },
        "Value": {
          "description": "The value that is associated with the specified tag key (key). This value acts as a descriptor for the tag key. A tag value cannot be null, but it can be an empty string.",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "object"
    }
  },
  "description": "Resource Type definition for AWS::SecurityLake::Subscriber",
  "handlers": {
    "create": {
      "permissions": [
        "securitylake:CreateSubscriber",
        "securitylake:CreateCustomLogSource",
        "securitylake:CreateDataLake",
        "securitylake:TagResource",
        "securitylake:GetSubscriber",
        "securitylake:ListSubscribers",
        "securitylake:ListTagsForResource",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:PutRolePolicy",
        "iam:CreateRole",
        "iam:CreateServiceLinkedRole",
        "glue:GetDatabase",
        "glue:GetTable",
        "lakeformation:RegisterResource",
        "lakeformation:GrantPermissions",
        "lakeformation:RevokePermissions",
        "lakeformation:ListPermissions",
        "ram:GetResourceShareAssociations",
        "ram:CreateResourceShare",
        "ram:UpdateResourceShare",
        "ram:GetResourceShares"
      ]
    },
    "delete": {
      "permissions": [
        "securitylake:DeleteSubscriber",
        "iam:GetRole",
        "iam:ListRolePolicies",
        "iam:DeleteRole",
        "iam:DeleteRolePolicy",
        "glue:GetTable",
        "lakeformation:RevokePermissions",
        "lakeformation:ListPermissions",
        "ram:GetResourceShares",
        "ram:DeleteResourceShare",
        "events:DeleteApiDestination",
        "events:DeleteConnection",
        "events:DeleteRule",
        "events:ListApiDestinations",
        "events:ListTargetsByRule",
        "events:DescribeRule",
        "events:RemoveTargets",
        "sqs:DeleteQueue",
        "sqs:GetQueueUrl"
      ]
    },
    "list": {
      "permissions": [
        "securitylake:ListSubscribers"
      ]
    },
    "read": {
      "permissions": [
        "securitylake:GetSubscriber",
        "securitylake:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "securitylake:UpdateSubscriber",
        "securitylake:GetSubscriber",
        "securitylake:TagResource",
        "securitylake:UntagResource",
        "securitylake:ListTagsForResource",
        "glue:GetDatabase",
        "glue:GetTable",
        "lakeformation:ListPermissions",
        "lakeformation:GrantPermissions",
        "lakeformation:RevokePermissions",
        "ram:CreateResourceShare",
        "ram:GetResourceShares",
        "ram:GetResourceShareAssociations",
        "ram:UpdateResourceShare",
        "ram:DeleteResourceShare",
        "iam:CreateRole",
        "iam:GetRole",
        "iam:DeleteRole",
        "iam:PutRolePolicy",
        "iam:DeleteRolePolicy",
        "iam:ListRolePolicies",
        "events:CreateApiDestination",
        "events:CreateConnection",
        "events:ListApiDestinations",
        "events:ListConnections",
        "events:PutRule",
        "events:UpdateApiDestination",
        "events:UpdateConnection",
        "events:DeleteApiDestination",
        "events:DeleteConnection",
        "events:DeleteRule",
        "events:RemoveTargets",
        "events:ListTargetsByRule",
        "events:DescribeRule",
        "events:PutTargets"
      ]
    }
  },
  "primaryIdentifier": [
    "/properties/SubscriberArn"
  ],
  "properties": {
    "AccessTypes": {
      "$ref": "#/definitions/AccessTypes"
    },
    "DataLakeArn": {
      "description": "The ARN for the data lake.",
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "ResourceShareArn": {
      "type": "string"
    },
    "ResourceShareName": {
      "type": "string"
    },
    "S3BucketArn": {
      "type": "string"
    },
    "Sources": {
      "description": "The supported AWS services from which logs and events are collected.",
      "insertionOrder": true,
      "items": {
        "$ref": "#/definitions/Source"
      },
      "type": "array"
    },
    "SubscriberArn": {
      "type": "string"
    },
    "SubscriberDescription": {
      "description": "The description for your subscriber account in Security Lake.",
      "type": "string"
    },
    "SubscriberIdentity": {
      "additionalProperties": false,
      "description": "The AWS identity used to access your data.",
      "properties": {
        "ExternalId": {
          "description": "The external ID used to establish trust relationship with the AWS identity.",
          "maxLength": 1224,
          "minLength": 2,
          "pattern": "^[\\w+=,.@:/-]*$",
          "type": "string"
        },
        "Principal": {
          "description": "The AWS identity principal.",
          "pattern": "^([0-9]{12}|[a-z0-9\\.\\-]*\\.(amazonaws|amazon)\\.com)$",
          "type": "string"
        }
      },
      "required": [
        "ExternalId",
        "Principal"
      ],
      "type": "object"
    },
    "SubscriberName": {
      "description": "The name of your Security Lake subscriber account.",
      "maxLength": 64,
      "minLength": 1,
      "pattern": "^[\\\\\\w\\s\\-_:/,.@=+]*$",
      "type": "string"
    },
    "SubscriberRoleArn": {
      "type": "string"
    },
    "Tags": {
      "description": "An array of objects, one for each tag to associate with the subscriber. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.",
      "insertionOrder": true,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    }
  },
  "readOnlyProperties": [
    "/properties/SubscriberArn",
    "/properties/S3BucketArn",
    "/properties/SubscriberRoleArn",
    "/properties/ResourceShareArn",
    "/properties/ResourceShareName"
  ],
  "replacementStrategy": "delete_then_create",
  "required": [
    "AccessTypes",
    "DataLakeArn",
    "Sources",
    "SubscriberIdentity",
    "SubscriberName"
  ],
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-securitylake.git",
  "tagging": {
    "cloudFormationSystemTags": false,
    "permissions": [
      "securitylake:TagResource",
      "securitylake:UntagResource",
      "securitylake:ListTagsForResource"
    ],
    "tagOnCreate": true,
    "tagProperty": "/properties/Tags",
    "tagUpdatable": true,
    "taggable": true
  },
  "typeName": "AWS::SecurityLake::Subscriber"
}
